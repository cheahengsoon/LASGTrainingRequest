//====================================================================================================
// Base code generated with Momentum: DAC Gen (Build 3.0.5701.25371)
// Layered Architecture Solution Guidance (http://layerguidance.codeplex.com)
//
// Generated by es.cheah at ENGSOON on 11/10/2016 14:21:18 
//====================================================================================================

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Text;
using System.Data;
using System.Data.Common;
using Microsoft.Practices.EnterpriseLibrary.Data;
using Microsoft.Practices.EnterpriseLibrary.Data.Sql;
using TR.Entities;

namespace TR.Data
{
    /// <summary>
    /// User data access component. Manages CRUD operations for the User table.
    /// </summary>
    public partial class UsersDAC : DataAccessComponent
    {
        /// <summary>
        /// Returns a row from the Users table.
        /// </summary>
        /// <param name="userID">A UserID value.</param>
        /// <param name="userName">A UserName value.</param>
        /// <param name="password">A Password value.</param>
        /// <returns>A Users object with data populated from the database.</returns>
        //public Users SelectById(long userID, string userName, string password)
        //{
        //    const string SQL_STATEMENT =
        //        "SELECT [UserID], [UserName], [Password] " +
        //        "FROM ace.Users  " +
        //        "WHERE [UserID]=@UserID " +
        //              "AND [UserName]=@UserName " +
        //              "AND [Password]=@Password ";

        //    Users users = null;

        //    // Connect to database.
        //    var db = new SqlDatabase(base.ConnectionString);
        //    using (DbCommand cmd = db.GetSqlStringCommand(SQL_STATEMENT))
        //    {
        //        db.AddInParameter(cmd, "@UserID", DbType.Int64, userID);
        //        db.AddInParameter(cmd, "@UserName", DbType.AnsiString, userName);
        //        db.AddInParameter(cmd, "@Password", DbType.AnsiString, password);

        //        using (IDataReader dr = db.ExecuteReader(cmd))
        //        {
        //            if (dr.Read())
        //            {
        //                // Create a new Users
        //                users = new Users();

        //                // Read values.
        //                users.UserID = GetDataValue<long>(dr, "UserID");
        //                users.UserName = GetDataValue<string>(dr, "UserName");
        //                users.Password = GetDataValue<string>(dr, "Password");
        //            }
        //        }
        //    }

        //    return users;
        //}
    }
}

