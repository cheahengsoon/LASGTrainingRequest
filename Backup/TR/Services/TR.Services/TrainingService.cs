//====================================================================================================
// Base code generated with Velocity: SL Gen (Build 3.0.5701.25371)
// Layered Architecture Solution Guidance (http://layerguidance.codeplex.com)
//
// Generated by es.cheah at ENGSOON on 11/07/2016 23:58:29 
//====================================================================================================

using MK.Framework.ACE.Entities;
using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ServiceModel;
using TR.Business;
using TR.Entities;
using TR.Services.Contracts;

namespace TR.Services
{
    /// <summary>
    /// Training service component.
    /// </summary>
    [ServiceBehavior(InstanceContextMode = InstanceContextMode.PerCall, ConcurrencyMode = ConcurrencyMode.Multiple)]
    public class TrainingService : ITrainingService
    {
        /// <summary>
        /// Calls the GetTraining business method of the TrainingComponent.
        /// </summary>
        /// <param name="tRequestID"> A tRequestID value.</param>
        /// <returns>Returns a TrainingRequest object.</returns>
        public TrainingRequest GetTraining(string tRequestID)
        {
            var bc = new TrainingComponent();
            return bc.GetTraining(tRequestID);
        }


        /// <summary>
        /// Calls the ListTraining business method of the TrainingComponent.
        /// </summary>
        /// <param name="currentPage"> A currentPage value.</param>
        /// <returns>Returns a List<TrainingRequest> object.</returns>
        public List<TrainingRequest> ListTraining(int currentPage)
        {
            var bc = new TrainingComponent();
            return bc.ListTraining(currentPage);
        }


        /// <summary>
        /// Calls the LoginVerify business method of the TrainingComponent.
        /// </summary>
        /// <param name="Username"> A Username value.</param>
        /// <param name="Password"> A Password value.</param>
        /// <returns>Returns a User object.</returns>
        public User LoginVerify(string username, string password)
        {
            var bc = new TrainingComponent();
            return bc.LoginVerify(username, password);
        }

        /// <summary>
        /// Calls the Delay business method of the TrainingComponent.
        /// </summary>
        /// <param name="trainingRequest"> A trainingRequest value.</param>
        public void Delay(TrainingRequest trainingRequest)
        {
            var bc = new TrainingComponent();
            bc.Delay(trainingRequest);
        }

        /// <summary>
        /// Calls the Export business method of the TrainingComponent.
        /// </summary>


        /// <summary>
        /// Calls the Export business method of the TrainingComponent.
        /// </summary>
        /// <param name="trainingRequest"> A trainingRequest value.</param>
        public void Export()
        {
            var bc = new TrainingComponent();
            bc.Export();
        }



        /// <summary>
        /// Calls the GetUserPermission business method of the TrainingComponent.
        /// </summary>
        /// <param name="userID"> A userID value.</param>
        /// <param name="policyId"> A policyId value.</param>
        /// <returns>Returns a AccessPolicy object.</returns>
        public AccessPolicy GetUserPermission(long userID, string policyId)
        {
            var bc = new TrainingComponent();
            return bc.GetUserPermission(userID, policyId);
        }
    }
}
